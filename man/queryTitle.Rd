% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/queryTitle.R
\name{queryTitle}
\alias{queryTitle}
\title{Search for and return candidate matches to a title in openAlex}
\usage{
queryTitle(
  title = NULL,
  mailto = NULL,
  wait_time = 5,
  max_results = 5,
  url = "https://api.openalex.org/works",
  data_style = c("bare_bones", "citation", "comprehensive", "all")
)
}
\arguments{
\item{title}{a string name for title https://docs.openalex.org/api}

\item{mailto}{email address of user, needed to get in 'polite pool' of API}

\item{wait_time}{how long to wait on query results before timing out, in seconds}

\item{max_results}{how many results to return (uses "per_page" feature on OA to grab first page of results)}

\item{url}{the base url for openAlex query}

\item{data_style}{options for processWork() --> how much/how little data to grab from json list, see @details}
}
\description{
Primary use of this function is to make a query object for use in openAlex that returns potential matches to a title string
}
\details{
Note that because extracted records can be pretty large--and are complicated, nested json file--there is an optional "data_style" command that lets the user specify what to return. Currently there are three options: (1) bare_bones returns OpenAlex ID + DOI, basically, results that can be used to look up the work again; (2) citation returns typical citation information, like journal name, author, etc., with a couple bonus items like source.id to link back to openAlex (3) comprehensive returns author institutional affiliations, open access info, funding data, etc.; and (4) \link{not active} all returns the entire result in original json format.
}
\examples{
data(titles)
#query a single titles
queryOpenAlex(titles[22])
}
