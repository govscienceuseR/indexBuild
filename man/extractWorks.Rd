% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extractWorks.R
\name{extractWorks}
\alias{extractWorks}
\title{Extract works associated with a concept in openAlex}
\usage{
extractWorks(
  dest_file = NULL,
  override = F,
  mailto = NULL,
  concept_id = NULL,
  concept_page = NULL,
  source_id = NULL,
  source_page = NULL,
  cursor = T,
  per_page = NULL,
  to_date = NULL,
  from_date = NULL,
  keep_paratext = FALSE,
  debug = FALSE,
  sleep_time = 0.1,
  data_style = c("bare_bones", "all", "citation", "custom"),
  return_to_workspace = T
)
}
\arguments{
\item{dest_file}{location to save output as a json.gz}

\item{override}{override 1M query result limit?}

\item{mailto}{email address of user, needed to get in 'polite pool' of API}

\item{concept_id}{string for openAlex concept ID}

\item{concept_page}{string for openAlex concept page url}

\item{source_id}{(optional) openAlex ID# for the source associated with the work(s)}

\item{source_page}{(optional) openAlex webpage for the source}

\item{cursor}{boolean if TRUE will perform cursor pagination needed for iterating}

\item{per_page}{how many works returned per page}

\item{to_date}{latest publication date, in YYYY-MM-DD format or a YEAR (assumes YEAR/12/31)}

\item{from_date}{earliest publication date, in YYYY-MM-DD format a YEAR (assumes YEAR/01/01)}

\item{keep_paratext}{boolean to retain or exclude paratext from returns}

\item{debug}{boolean, if TRUE returns query url, if FALSE actually does query}

\item{sleep_time}{time to Sys.sleep() in between cursor iterations}

\item{data_style}{options for how much/how little data to return, see @details}

\item{return_to_workspace}{boolean for whether final result should be returned as workspace object}
}
\description{
Primary use is to query a concept ID and extract associated works, e.g., all article records associated with "habitat"
}
\details{
Note that because extracted records can be pretty large--and are complicated, nested json file--there is an optional "data_style" command that lets the user specify what to return. Currently there are three options: (1) bare_bones returns OpenAlex ID + DOI, basically, results that can be used to look up the work again; (2) citation returns typical citation information, like journal name, author, etc. (3) custom can be tailored to suit researcher aims (note this likely requires building a funciton or two to parse a nested list of interest); and (4) all returns the entire result in original json format.
}
